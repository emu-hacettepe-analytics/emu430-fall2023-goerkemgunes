---
title: "Assignment 2"
---
```{r}

library(rvest)
library(tidyverse)
after <- "https://m.imdb.com/search/title/?title_type=feature&release_date=2010-01-01,2023-12-31&num_votes=2500,&country_of_origin=TR&count=250"
before <- "https://m.imdb.com/search/title/?title_type=feature&release_date=,2009-12-31&num_votes=2500,&country_of_origin=TR&count=250"
after_2010 <- read_html(after)
before_2010 <- read_html(before)
title_names <- after_2010 |> html_nodes('.ipc-title__text')
title_names <- html_text(title_names)
title_names <- tail(head(title_names,-1),-1)
title_names <- str_split(title_names, " ", n=2)
title_names <- unlist(lapply(title_names, function(x) {x[2]}))

year <-after_2010|> html_nodes('.dli-title-metadata-item:nth-child(1)')
year <- html_text(year)
year <- as.numeric(year)

duration <- after_2010|> html_nodes('.dli-title-metadata-item:nth-child(2)')
duration <- html_text(duration)
duration <- sapply(str_extract_all(duration, "\\d+"), function(x) {
  x1 <- as.numeric(x)
  if(length(x1)>1) x1[1]*60 + x1[2] else x1 })

rating <- after_2010 |> html_nodes('.ratingGroup--imdb-rating')
rating <- html_text(rating)
rating <- as.numeric(substr(rating,1,3))


vote <- after_2010|> html_nodes('.kRnqtn')
vote <- html_text(vote)
vote <- parse_number(vote)

title_names_b <- before_2010 |> html_nodes('.ipc-title__text')
title_names_b <- html_text(title_names_b)
title_names_b <- tail(head(title_names_b,-1),-1)
title_names_b <- str_split(title_names_b, " ", n=2)
title_names_b <- unlist(lapply(title_names_b, function(x) {x[2]}))

year_b <- before_2010 |> html_nodes('.dli-title-metadata-item:nth-child(1)')
year_b <- html_text(year_b)
year_b <- as.numeric(year_b)

duration_b <- before_2010 |> html_nodes('.dli-title-metadata-item:nth-child(2)')
duration_b <- html_text(duration_b)
duration_b <- sapply(str_extract_all(duration_b, "\\d+"), function(x) {
  x1 <- as.numeric(x)
  if(length(x1)>1) x1[1]*60 + x1[2] else x1 })

rating_b <- before_2010 |> html_nodes('.ratingGroup--imdb-rating')
rating_b <- html_text(rating_b)
rating_b <- as.numeric(substr(rating_b,1,3))


vote_b <- before_2010 |> html_nodes('.kRnqtn')
vote_b <- html_text(vote_b)
vote_b <- parse_number(vote_b)

df_after <- data.frame(
  Title = title_names,
  Year = year,
  Duration = duration,
  Rating = rating,
  Votes = vote
)
df_before <- data.frame(
  Title=title_names_b,
  Year=year_b,
  Duration=duration_b,
  Rating = rating_b,
  Votes=vote_b
)
movies <- bind_rows(df_after,df_before)

#Selecting the top 5 and bottom 5 movies based on Ratings
#Firstly I ordered the movies data by ratings
rating_order <- movies %>% arrange(desc(Rating))
#Then select the top 5 and bottom 5
top_5 <- head(rating_order, 5)
bottom_5 <- tail(rating_order, 5)
both_5 <- rbind(top_5, bottom_5)
```
For the top 5 movies I watched CM101MMXI Fundamentals and I probably haven't watched both Hababam Sınıfı movies completely. To be honest, in my opinion, these movies, which are quite good for their time, do not entirely deserve these ratings and rankings. For the bottom 5 movies I can't say, I watched them so, I can't make any comment on these movies.
```{r}

#Checking rating of favourite movies
#Yahsi Bati
desired_movie_title <- "Yahsi Bati" 
selected_movie_base <- movies[movies$Title == desired_movie_title, !(names(movies) %in% "Rank")]
print(selected_movie_base, caption = desired_movie_title)
#Dügün Dernek
desired_movie_title <- "Dügün Dernek" 
selected_movie_base <- movies[movies$Title == desired_movie_title, !(names(movies) %in% "Rank")]
print(selected_movie_base, caption = desired_movie_title)


#plots for yearly rating averages and number of movies over the years

movies$Year <- as.integer(movies$Year)
avg_rating <- movies %>% 
group_by(Year) %>%
summarise(rating_avg= mean(Rating))
avg_rating

library(ggplot2)
ggplot(avg_rating,aes(x= Year, y= rating_avg)) + geom_point()+
labs(x = "Year", y = "Average Rating")

movie_count <- movies %>%
  group_by(Year) %>%
  summarise(Count = n())

ggplot(movie_count, aes(x = Year, y = Count)) +
  geom_line() +
  labs(x = "Year", y = "Number of Movies")

ggplot(data = movies, aes(x = factor(Year), y = Rating)) +
  geom_boxplot() +
  labs(x = "Year", y = "Rating")

#Correlation of Votes and Rating
correlation <- cor(movies$Votes,movies$Rating)
cat("Correlation between Votes and Rating", correlation, "\n")
ggplot(movies, aes(x = Votes, y = Rating)) +
  geom_point() +
  labs(x = "Votes", y = "Rating")
#Correlation of Duration and Rating
correlation <- cor(movies$Duration,movies$Rating)
cat("Correlation between Duration and Rating", correlation, "\n")
ggplot(movies, aes(x = Duration, y = Rating)) +
  geom_point() +
  labs(x = "Duration", y = "Rating")

#Top 1000 list
top_1000<- "https://m.imdb.com/search/title/?title_type=feature&groups=top_1000&country_of_origin=TR&count=250"
turkish_top_1000 <- read_html(top_1000)
title <- turkish_top_1000 |> html_nodes('.ipc-title__text')
title <- html_text(title)
title <- tail(head(title,-1),-1)
title <- str_split(title, " ", n=2)
title <- unlist(lapply(title, function(x) {x[2]}))

year <- turkish_top_1000 |> html_nodes('.dli-title-metadata-item:nth-child(1)')
year <- html_text(year)
year <- as.numeric(year)

turkish_df <- data.frame(
  Title = title,
  Year = year
)
gathered <- inner_join(turkish_df, movies, by = c("Title" = "Title", "Year" = "Year"))
order_gathered <- gathered %>% arrange(desc(Rating))

```
Movies that I ordered from Top1000 list is not same with the previous dataset's first 11 movies. So, we can understand that, IMDB using different system in Top1000 list while ranking the movies.


